cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat("\nCC=clang", "CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
setwd("~/Documents/code/cos_2017/data")
listings = read.csv("listings.csv",stringsAsFactors = F)
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
listings = listings %>% mutate(price = as.numeric(gsub("\\$|,","",price)))
summary(listings$price)
plot(listings$accommodates,listings$price)
listings
View(listings)
plot(listings_for_lm$accommodates,listings$price)
listings_for_lm = listings %>%
filter(accommodates <= 10,price <=1000)
plot(listings_for_lm$accommodates,listings$price)
listings_for_lm = listings %>%
filter(accommodates <= 10,price <=1000)
plot(listings_for_lm$accommodates,listings_for_lm$price)
library(modelr)
libary(ggplot2)
library(ggplot2)
update
update.packages(
)
listings = read.csv("listings.csv",stringsAsFactors = TRUE)
View(listings)
listings = read.csv("listings.csv",stringsAsFactors = FALSE)
library(tidyverse)
help("read.csv")
names(listings)
ls()
a <- c(2, 'wow')
a
typeof(a)
b = c(3,5)
typeof(b)
typeof(c('c', 'd'))
tree = read.csv('tree.csv')
tree = read.csv('tree.csv')
tree = read.csv('trees.csv')
View(tree)
attributes(tree)
tree$c
tree$C
summary(tree$C)
tree$C <- factor(tree$C)
summary(tree$C)
help(read.csv)
b <- c(3,5,2,3)
levels <- factor(c('A', 'B', 'A', 'B'))
bubba <- data.frame(first=a,second=b, f=levels
)
View(bubba)
a <- c(1,2,3,4)
b <- c(3,5,2,3)
levels <- factor(c('A', 'B', 'A', 'B'))
bubba <- data.frame(first=a,second=b, f=levels)
bubba
bubba$f
tree$C
occur <- matrix(c(4,3,2),ncol=3,byrow=TRUE)
occur
occur <- matrix(c(4,3,2),ncol=3,byrow=FALSE)
occur
occur <- matrix(c(4,3,2,4),ncol=3,byrow=FALSE)
occur <- matrix(c(4,3,2,4,6,7),ncol=3,byrow=FALSE)
occur
occur <- matrix(c(4,3,2,4,6,7),ncol=3,byrow=TRUE)
occur
colnames(occur) <- c("A","B","C")
occur
occur <- as.table(occur)
occur
a <- c("Sometimes","Sometimes","Never","Always","Always","Sometimes","Sometimes","Never")
> b <- c("Maybe","Maybe","Yes","Maybe","Maybe","No","Yes","No")
b <- c("Maybe","Maybe","Yes","Maybe","Maybe","No","Yes","No")
results = table(a, b)
warnings()
library(tidylinks)
library(tidyverse)
results = table(a, b)
results
quantile(tree$LFBM)
summary(tree)
help(Distributions)
dnorm(0)
rnorm()
rnorm(1)
rnorm(0)
help(rnorm)
rnorm(3)
dnorm(c(2,3))
prnorm(c(2,3))
pnorm(c(2,3))
x <- seq(-20,20,by=.1)
x
y <- dnorm(x)
plot(x,y)
y <- dnorm(x,mean=2.5,sd=0.1)
plot(x,y)
y <- dnorm(x,mean=2.5,sd=1.3)
plot(x,y)
pnorm(1,lower.tail=FALSE)
pnorm(1,lower.tail=TRUE)
help(TDist)
help(Binomial)
w1 = read.csv('w1.dat')
w1 = read.csv('vals.dat')
View(w1)
View(w1)
stripchart(w1$vals)
stripchart(seq(-20,20,.5))
stripchart(w1$vals,method="stack")
stripchart(tree$C)
View(tree)
stripchart(tree$N)
stripchart(tree$N,'stack')
stripchart(w1$vals,method="jitter")
stripchart(w1$vals,vertical=TRUE)
stripchart(w1$vals,method="stack",
main='Leaf BioMass in High CO2 Environment',
xlab='BioMass of Leaves')
stripchart(w1$vals,method="stack",
main='Leaf BioMass in High CO2 Environment',
xlab='BioMass of Leaves',ylab='asdf')
hist(w1$vals,main="Distribution of w1",xlab="w1")
hist(w1$vals,main="Distribution of w1",xlab="w1",ylab='freq')
hist(w1$vals,main="Distribution of w1")
help(hist)
hist(w1$vals,breaks=12,xlim=c(1,1.3))
stripchart(w1$vals,add=TRUE,at=15.5)
hist(w1$vals,breaks=12,add=TRUE)
warnings()
hist(w1$vals,breaks=12)
stripchart(w1$vals,add=TRUE,at=15.5)
hist(w1$vals,main='Leaf BioMass in High CO2 Environment',xlab='BioMass of Leaves',ylim=c(0,16));stripchart(w1$vals,add=TRUE,at=15.5)
hist(w1$vals,breaks=12)
hist(w1$vals,main='Leaf BioMass in High CO2 Environment',xlab='BioMass of Leaves',ylim=c(0,16));stripchart(w1$vals,add=TRUE,at=15.5)
boxplot(w1$vals)
boxplot(w1$vals,
main='Leaf BioMass in High CO2 Environment',
xlab='BioMass of Leaves',
horizontal=TRUE)
hist(w1$vals,main='Leaf BioMass in High CO2 Environment',xlab='BioMass of Leaves',ylim=c(0,16))
boxplot(w1$vals,horizontal=TRUE,at=15.5,add=TRUE,axes=FALSE)
hist(w1$vals,main='Leaf BioMass in High CO2 Environment',xlab='BioMass of Leaves',ylim=c(0,16))
boxplot(w1$vals,horizontal=TRUE,at=15.5,add=TRUE,axes=TRUE)
boxplot(w1$vals,horizontal=FALSE,at=15.5,add=TRUE,axes=TRUE)
hist(w1$vals,main='Leaf BioMass in High CO2 Environment',xlab='BioMass of Leaves',ylim=c(0,16))
boxplot(w1$vals,horizontal=FALSE,at=15.5,add=TRUE,axes=TRUE)
hist(w1$vals,main='Leaf BioMass in High CO2 Environment',xlab='BioMass of Leaves',ylim=c(0,16))
boxplot(w1$vals,horizontal=FALSE,at=15.5,add=TRUE,axes=FALSE)
boxplot(w1$vals,horizontal=TRUE,at=15.5,add=TRUE,axes=FALSE)
tree <- read.csv(file="trees91.csv",sep=",",head=TRUE)
tree <- read.csv(file="trees.csv",sep=",",head=TRUE)
tree$C = factor(tree$C)
tree$N = factor(tree$N)
boxplot(tree$STBM,
main='Stem BioMass in Different CO2 Environments',
ylab='BioMass of Stems')
boxplot(tree$STBM~tree$C)
plot(tree$STBM,tree$LFBM)
cov(tree$STBM,tree$LFBM)
help(cov)
cor(tree$STBM,tree$LFBM)
boxplot(tree$LFBM~tree$C)
qqnorm(w1$vals)
qqline(w1$vals)
clear
x <- rnorm(10,sd=5,mean=20)
x <- rnorm(10,sd=5,mean=20)
y <- 2.5*x - 1.0 + rnorm(10,sd=9,mean=0)
cor(x,y)
plot(x,y)
x1 <- runif(8,15,25)
x1
y1 <- 2.5*x1 - 1.0 + runif(8,-6,6)
plot(x1, y1)
points(x1,y1,col=2)
points(x2,y2,col=3,pch=2)
points(x1,y1,col=3,pch=2)
plot(x1, y1)
points(x1,y1,col=3,pch=2)
points(x1,y1,col=3,pch=2)
points(x1,y1,col=2)
help(points)
points(x1,y1,col=3,pch=2)
plot(x1, y1)
x2 <- runif(8,15,25)
y2 <- 2.5*x2 - 1.0 + runif(8,-6,6)
points(x2,y2,col=3,pch=2)
plot(x,y,xlab="Independent",ylab="Dependent",main="Random Stuff")
points(x1,y1,col=2,pch=3)
points(x2,y2,col=4,pch=5)
legend(14,70,c("Original","one","two"),col=c(1,2,4),pch=c(1,3,5))
legend(14,70,c("Original","one","two"),col=c(1,2,4),pch=c(1,3,2))
legend(14,70,c("Original","one","two"),col=c(1,2,4),pch=c(1,3,5))
legend(14,70,c("Original","one","two"),col=c(1,2,4),pch=c(1,5,3))
legend(14,70,c("Original","one","two"),col=c(1,2,4),pch=c(1,3,5))
legend(14,70,c("Original","one","two"),col=c(1,2,4),pch=c(1,3,6))
xlim(c(0,100))
xlim = c(0,100)
plot(x,y,xlab="Independent",ylab="Dependent",main="Random Stuff")
xHigh <- x
yHigh <- y + abs(rnorm(10,sd=3.5))
xLow <- x
yLow <- y - abs(rnorm(10,sd=3.1))
arrows(xHigh,yHigh,xLow,yLow,col=2,angle=90,length=0.1,code=3)
arrows(xHigh,yHigh,xLow,yLow,col=2,angle=76,length=0.1,code=3)
arrows(xHigh,yHigh,xLow,yLow,col=2,angle=76,length=0.1,code=8)
arrows(xHigh,yHigh,xLow,yLow,col=2,angle=76,length=0.1,code=2)
arrows(xHigh,yHigh,xLow,yLow,col=2,angle=76,length=0.1,code=1)
help("Hypergeometric")
numberWhite <- rhyper(400,4,5,3)
numberChipped <- rhyper(400,2,7,3)
plot(numberWhite,numberChipped,xlab="Number White Marbles Drawn",
ylab="Number Chipped Marbles Drawn",main="Pulling Marbles")
plot(jitter(numberWhite),jitter(numberChipped),xlab="Number White Marbles Drawn",
ylab="Number Chipped Marbles Drawn",main="Pulling Marbles With Jitter")
par(mfrow=c(1,2))
help(par)
plot(jitter(numberWhite),jitter(numberChipped),xlab="Number White Marbles Drawn",
ylab="Number Chipped Marbles Drawn",main="Pulling Marbles With Jitter")
plot(numberWhite,numberChipped,xlab="Number White Marbles Drawn",
ylab="Number Chipped Marbles Drawn",main="Pulling Marbles")
par(mfrow=c(2,3))
boxplot(numberWhite,main="first plot")
boxplot(numberChipped,main="second plot")
plot(jitter(numberWhite),jitter(numberChipped),xlab="Number White Marbles Drawn",
ylab="Number Chipped Marbles Drawn",main="Pulling Marbles With Jitter")
hist(numberWhite,main="fourth plot")
hist(numberChipped,main="fifth plot")
mosaicplot(table(numberWhite,numberChipped),main="sixth plot")
numberWhite
smoothScatter(numberWhite,numberChipped,
xlab="White Marbles",ylab="Chipped Marbles",main="Drawing Marbles")
par(mfrow(c(1,1)))
par(mfrow=(c(1,1)))
smoothScatter(numberWhite,numberChipped,
xlab="White Marbles",ylab="Chipped Marbles",main="Drawing Marbles")
numberWhite <- rhyper(30,4,5,3)
numberChipped <- rhyper(30,2,7,3)
smoothScatter(numberWhite,numberChipped,
xlab="White Marbles",ylab="Chipped Marbles",main="Drawing Marbles")
grid(4,3)
smoothScatter(numberWhite,numberChipped,
xlab="White Marbles",ylab="Chipped Marbles",main="Drawing Marbles")
numberWhite <- rhyper(30,4,5,3)
numberChipped <- rhyper(30,2,7,3)
smoothScatter(numberWhite,numberChipped,
xlab="White Marbles",ylab="Chipped Marbles",main="Drawing Marbles")
numberChipped <- rhyper(30,2,7,3)
numberWhite <- rhyper(30,4,5,3)
smoothScatter(numberWhite,numberChipped,
xlab="White Marbles",ylab="Chipped Marbles",main="Drawing Marbles")
grid(4,3)
uData <- rnorm(20)
vData <- rnorm(20,mean=5)
wData <- uData + 2*vData + rnorm(20,sd=0.5)
xData <- -2*uData+rnorm(20,sd=0.1)
yData <- 3*vData+rnorm(20,sd=2.5)
d <- data.frame(u=uData,v=vData,w=wData,x=xData,y=yData)
d
pairs(d)
help(pairs)
x = c(-1,1,1,-1,-1)
y = c(-1,-1,1,1,-1)
plot(x,y)
polygon(x,y,col='blue')
stdDev <- 0.75;
x <- seq(-5,5,by=0.01)
y <- dnorm(x,sd=stdDev)
plot(x,y)
right <- qnorm(0.95,sd=stdDev)
plot(x,y,type="l",xaxt="n",ylab="p",
xlab=expression(paste('Assumed Distribution of ',bar(x))),
axes=FALSE,ylim=c(0,max(y)*1.05),xlim=c(min(x),max(x)),
frame.plot=FALSE)
axis(1,at=c(-5,right,0,5),
pos = c(0,0),
labels=c(expression(' '),expression(bar(x)[cr]),expression(mu[0]),expression(' ')))
axis(2)
xReject <- seq(right,5,by=0.01)
yReject <- dnorm(xReject,sd=stdDev)
polygon(c(xReject,xReject[length(xReject)],xReject[1]),
c(yReject,0, 0), col='red')
xReject
dnorm(xReject[length(xReject)],stdDev)
dnorm(xReject[length(xReject)],stdDev)
yReject
polygon(c(xReject,xReject[length(xReject)],xReject[1]),
c(yReject,0, 0), col='red')
polygon(c(xReject,xReject[1]), c(yReject,0),col='green')
x <- seq(0,2*pi,by=pi/100)
y <- x
help(t)
xg <- (x*0+1) %*% t(y)
yg <- (x) %*% t(y*0+1)
x
xg
y* 0
f <- sin(xg+yg)
persp(x,y,f,theta=-10,phi=40)
x <- seq(0,2*pi,by=pi/4)
y = x
yg <- (x) %*% t(y*0+1)
xg <- (x*0+1) %*% t(y)
xy
x
g
y
xg
yg
xg+yg
f <- sin(xg+yg)
persp(x,y,f,theta=-10,phi=40)
persp(x,y,f,theta=-10,phi=0)
persp(x,y,f,theta=-10,phi=30)
persp(x,y,f,theta=10,phi=30)
numberWhite <- rhyper(30,4,5,3)
numberChipped <- rhyper(30,2,7,3)
numberWhite
numberWhite <- as.factor(numberWhite)
numberWhite
summary(numberWhite)
plot(numberWhite)
plot(numberChipped)
table(numberWhite)
totals =table(numberWhite)
barplot(totals,main="Number Draws",ylab="Frequency",xlab="Draws")
numberWhite[0]
numberWhite[1]
numberWhite[3]
barplot(sort(totals,decreasing=TRUE),main="Number Draws",ylab="Frequency",xlab="Draws")
totals
sort(totals,TRUE)
rownames(totals) <- c("none","one","two","three")
sort(totals,TRUE)
barplot(totals[c(3,1,4,2)])
xLoc = barplot(sort(totals,decreasing=TRUE),main="Number Draws",
ylab="Frequency",xlab="Draws",ylim=c(0,sum(totals)+2))
points(xLoc,cumsum(sort(totals,decreasing=TRUE)),type='p',col=2)
points(xLoc,cumsum(sort(totals,decreasing=TRUE)),type='l')
santa <- data.frame(belief=c('no belief','no belief','no belief','no belief',
'belief','belief','belief','belief',
'belief','belief','no belief','no belief',
'belief','belief','no belief','no belief'),
sibling=c('older brother','older brother','older brother','older sister',
'no older sibling','no older sibling','no older sibling','older sister',
'older brother','older sister','older brother','older sister',
'no older sibling','older sister','older brother','no older sibling')
)
able(santa)
table(santa)
plot(santa$belief)
plot(santa$sibling)
plot(santa$sibling,santa$belief)
plot(santa$belief,santa$sibling)
totals = table(santa$belief,santa$sibling)
totals
s = table(santa)
s
plot(s)
plot(totals)
plot(s)
plot(totals)
mosaicplot(totals,main="Older Brothers are Jerks",
xlab="Belief in Santa Claus",ylab="Older Sibling")
mosaicplot(totals,main="Older Brothers are Jerks",
xlab="Belief in Santa Claus",ylab="Older Sibling",
col=c(2,3,4))
totals[c(2,1),c(2,3,1)]
mosaicplot(totals[c(2,1),c(2,3,1)],main="Older Brothers are Jerks",
xlab="Belief in Santa Claus",ylab="Older Sibling",col=c(2,3,4))
mosaicplot(t(totals),main="Older Brothers are Jerks",
ylab="Belief in Santa Claus",xlab="Older Sibling",col=c(2,3))
x = rexp(20,rate=4)
x
hist(x,ylim=c(0,18),main="This Are An Histogram",xlab="X")
boxplot(x,at=16,horizontal=TRUE,add=TRUE)
rug(x,side=1)
help(rug)
d = density(x)
d
points(d,type='l',col=3)
dev.new()
dev.list()
help(dev)
help(dev.list())
help(dev.list
)
dev.off(quartz_off_screen)
dev.list()
dev.cur
dev.cur()
dev.set(3)
x = rnorm(20
)
hist(x)
dev.set(2)
boxplot(x)
dev.next()
dev.set(dev.next())
dev.print(device=png,width=200,"hist.png")
help(device)
help(dev)
dev.next()
dev.off()
dev.list()
dev.list()
dev.next()
dev.new()
dev.next
dev.list()
dev.next()
dev.off()
x <- rnorm(10,mean=0,sd=4)
y <- 3*x-1+rnorm(10,mean=0,sd=2)
summary(y)
plot(x,y,axes=FALSE,col=2)
axis(1,pos=c(0,0),at=seq(-7,5,by=1))
axis(2,pos=c(0,0),at=seq(-18,11,by=2))
axis(2,pos=c(0,3),at=seq(-18,11,by=2))
axis(2,pos=c(14,3),at=seq(-18,11,by=2))
plot(x,y,bty="7")
plot(x,y,bty="]")
plot(x,y,bty="[")
plot(x,y,bty="n")
box(lty=3)
c(1)[TRUE]
c(1)[FALSE]
year <- c(2000 ,   2001  ,  2002  ,  2003 ,   2004)
rate <- c(9.34 ,   8.50  ,  7.62  ,  6.93  ,  6.60)
plot(year,rate,
main="Commercial Banks Interest Rate for 4 Year Car Loan",
sub="http://www.federalreserve.gov/releases/g19/20050805/")
cor(year,rate)
help(lm)
fit <- lm(rate ~ year)
fit
attributes(fit)
attributes[coefficients]
fit$coefficients
fit$residuals
summary(fit)
res <- rate - (fit$coefficients[[2]]*year+fit$coefficients[[1]])
fit$residuals
fit$residuals[1]
res2 = fit$residuals
plot(year, res)
plot(year, res2)
plot(year,rate,
main="Commercial Banks Interest Rate for 4 Year Car Loan",
sub="http://www.federalreserve.gov/releases/g19/20050805/")
abline(fit)
help(abline)
install.packages("ggplot2")
install.packages("tidyr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("dplyr")
listings = read.csv('listings.csv')
hist(listings$price)
listings = read.csv('listings.csv')
listings = read.csv('listings.csv')
listings = read.csv('listings.csv')
listings = read.csv('listings.csv')
setwd("~/Documents/code/data-wrangling-r/Session2/data")
listings = read.csv('listings.csv')
head(listings)
str(listings)
summary(listings)
names(listings)
lisings[4, 5]
listings[4, 5]
listings[4, 'name']
listings[4, 3]
listings[4]
listings[4,5]
listings[4,'name']
listings[c(3,4),c(5,6)] # column five and six for row three and four
listings[4,]       # row four
summary(listings[c('square_feet', 'reviews_per_month')])
table(listings$room_type)
listings["room_type"]
table(listings$room_type, listings$accommodates)
table(listings$room_type, listings$accommodates >= 4)
hist(listings$price)
str(listings$price)        # notice it says "Factor w/ 324 Levels"
listings$nprice = as.numeric(gsub('\\$|,', '', listings$price))
hist(listings$nprice)
plot(listings$review_scores_rating, listings$nprice)
install.packages('tidyr')
install.packages('tidyr')
names(listings)
listings($neighborhood_overview)
listings$neighborhood_overview
View(listings)
table(listings$host_neighbourhood)
table(listings$room_type, listings$host_neighbourhood == 'Back Bay')
library(tidyr)
R.Version()
head(select(listings, reviews_per_month))
